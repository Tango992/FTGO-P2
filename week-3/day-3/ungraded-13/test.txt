package main

import (
	"encoding/json"
	"io"
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TambahAngka(a, b int) int {
	return a + b
}

func TestTambahData(t *testing.T) {
	result := TambahAngka(2, 3)
	assert.Equal(t, 5, result, "Hasil Penjumlahan sama dengan 5")
	assert.NotEqual(t, 5, result, "Hasil Penjumlahan tidak boleh 3")
}










func hello(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json") // Set the content type to JSON

// 	res := struct {
// 		Code    int    `json:"code"`
// 		Message string `json:"message"`
// 	}{
// 		Code:    http.StatusOK,
// 		Message: "Data Berhasil ditambahkan!", // Fixed the capitalization
// 	}

// 	jsonRes, err := json.Marshal(res)
// 	if err != nil {
// 		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
// 		return
// 	}

// 	w.WriteHeader(http.StatusOK)
// 	w.Write(jsonRes)
// }


// func TestHello(t *testing.T) {
// 	req := httptest.NewRequest("GET", "/hello", nil)
// 	w := httptest.NewRecorder()

// 	hello(w, req)

// 	res := w.Result()

// 	if res.StatusCode != http.StatusOK {
// 		t.Errorf("Status code seharusnya %d, yang tampil %d", http.StatusOK, res.StatusCode)
// 	}

// 	expectedResult := `{"code":200,"message":"Data Berhasil ditambahkan!"}` // Fixed the capitalization
// 	body, err := io.ReadAll(res.Body)
// 	if err != nil {
// 		t.Fatal(err)
// 	}

// 	if string(body) != expectedResult {
// 		t.Errorf("Response body seharusnya %s, yang tampil %s", expectedResult, string(body))
// 	}
// }